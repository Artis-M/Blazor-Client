@page "/productlistings"
@using BlazorApp.Data
@using BlazorApp.Models
@using BlazorApp.Authentication
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Text.Json
@inject NavigationManager navMan
@inject IInventoryService InventoryService
@inject AuthenticationStateProvider Authentication
@inject IJSRuntime JsRuntime
@attribute [Authorize]
            <h3>Product Listings</h3>
            <ul>
                <li>Reserved - Product quantity that is included included in an order</li>
                <li>Available - Available quantity of products</li>
                <li>Available - Available quantity of products ignoring orders</li>
            </ul>
            <h6>Add new product</h6>
            <div class="row">
                <EditForm class="s12" Model="@newProdcut" OnValidSubmit="@addProduct">
                    <div class="row">
                        <div class="input-field col s5">
                            <InputText placeholder="Price" @bind-Value="newProdcut.Name"></InputText>
                        </div>
                        <div class="input-field col s5">
                            <InputNumber placeholder="Price" @bind-Value="newProdcut.Price"></InputNumber>
                        </div>
                        <div class="input-field col s2">
                            <button class="btn" type="submit">Add</button>
                        </div>
                    </div>
                </EditForm>
            </div>

            <div class="row">
                <div class="s12">
                    @if (productListings == null)
                    {
                        <p><em>Loading data from webserver...</em></p>
                    }
                    else
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Price</th>
                                    <th>AvailableQuantity</th>
                                    <th>Reserved</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in productListings)
                                {
                                    <tr>
                                        <td>@item.product.ProductID</td>
                                        <td>@item.product.Name</td>
                                        <td>@item.product.Price</td>
                                        <td>@item.AvailableQuantity</td>
                                        <td>@item.Reserved</td>
                                        <td>@item.TotalQuantity</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>

            @code {
                private List<ProductListing> productListings;
                private Product newProdcut = new Product();
                private User cachedUser;
                protected override async Task OnInitializedAsync()
                {
                    cachedUser = JsonSerializer.Deserialize<User>(await JsRuntime.InvokeAsync<string>("sessionStorage.getItem", "currentUser"));
                    productListings = await InventoryService.getProductListings(cachedUser.Token);
                }
                public void addProduct()
                {
                    InventoryService.addProduct(newProdcut, cachedUser.Token);
                }
            }
